package SecondTry.Source_Code.Regex.Lessons11CheckIPV4;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by user on 09.10.2018.
 */
public class Main {
    public static void main(String[] args) {
        //IPV4 c десятичной формой записи и точками предполагает
        //что ip-адрес будет состоять из 4 чисел которые будут разделены точками
        //каждое число от 0 до 255
        int counter=0;
        String IPV4="0.0.0.0";
        Pattern pattern=Pattern.compile("^(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])))$");//две основные группы числа от 0 до 255
        //разделяемые точками и последнее число от 0 до 255
        //первая группа:
        //Одна цифра  - 0 до 9
        //___________________
        //Две цифры -  первое должно начинаться с 1 и заканчиваться 9,
        //а вторая цифра может быть в диапазоне от 0 до 9
        //______________
        //Тремя если первая цифра трехзначного числа 1 то след две могут быть в диапазоне от 0 до 9
        //если первая цифра трехназначного числа 2 то вторая цифра от 0 до 4, а третье - от \\d
        //если первые две цифры 25, то последняя может быть в диапазоне от 0 до 5
        //все это будет иметь в конце точку и будет повторяться 3 раза - {3}
        //_________________
        //вторая группа  - (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]) т.е. без точки
        //далее объединяем все это в одно группу и добавляем циркумфлекс и знак доллара, чтобы совпадения искались
        //точно с самого начала строки
        Matcher matcher=pattern.matcher(IPV4);
        while (matcher.find()) System.out.println("Match "+(++counter)+" found '"+IPV4.substring(matcher.start(),matcher.end())+
                "' match.start ["+matcher.start()+"] match.end ["+matcher.end()+"]");
    }
}
